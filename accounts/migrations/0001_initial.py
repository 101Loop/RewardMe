# Generated by Django 4.1.5 on 2023-01-22 18:13

import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "username",
                    models.CharField(
                        max_length=10, unique=True, verbose_name="Mobile Number"
                    ),
                ),
                ("email", models.EmailField(blank=True, max_length=255, null=True)),
                ("name", models.CharField(blank=True, max_length=255, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
                "ordering": ("-created_at",),
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="OTPValidation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "otp",
                    models.CharField(
                        blank=True, max_length=6, null=True, verbose_name="OTP"
                    ),
                ),
                (
                    "valid_until",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="The timestamp of the moment of expiry of the saved token.",
                    ),
                ),
                (
                    "destination",
                    models.CharField(
                        max_length=10, unique=True, verbose_name="OTP Generated For"
                    ),
                ),
                ("is_validated", models.BooleanField(default=False)),
                (
                    "validate_attempt",
                    models.IntegerField(default=3, verbose_name="Attempted Validation"),
                ),
                (
                    "otp_reactive_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="OTP Reactive At"
                    ),
                ),
                ("extra_data", models.JSONField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "OTP Validation",
                "verbose_name_plural": "OTP Validations",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="otpvalidation",
            index=models.Index(
                fields=["destination"], name="accounts_ot_destina_e42df1_idx"
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="groups",
            field=models.ManyToManyField(
                blank=True,
                help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                related_name="user_set",
                related_query_name="user",
                to="auth.group",
                verbose_name="groups",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(
                fields=["username"], name="accounts_us_usernam_c0ea66_idx"
            ),
        ),
    ]
